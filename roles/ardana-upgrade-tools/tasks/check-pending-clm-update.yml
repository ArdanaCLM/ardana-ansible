#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Simple task to handle the special ardana_notify_pending_clm_update variable
# that encodes whether CLM packages have been updated during one of the
# previous update playbook runs.
#
# Parameters:
#
#  update_status_reset (default: false): reset the status variable
#  update_status_set (default: false): set the status variable
#
# Return:
#
#  The pending_clm_update fact is set to reflect the value of the status
#  variable.
#  The update_status_msg fact is set to an output message describing the
#  pending action associated with the status variable.

---

- name: ardana-upgrade-tools | check-pending-clm-update |
        Initialize pending CLM update action message
  set_fact:
    pending_clm_update_msg: |
      WARNING: outstanding installed CLM package updates were detected !

      Before continuing with the update process, the CLM itself needs to
      be updated by running 'ardana-init' on the deployer node followed
      by running the recommended CLM update playbooks, i.e.:

        cd ~/openstack/ardana/ansible
        ansible-playbook -i hosts/localhost cobbler-deploy.yml
        ansible-playbook -i hosts/localhost config-processor-run.yml
        ansible-playbook -i hosts/localhost ready-deployment.yml

      Then the update can be resumed by running the same playbook again,
      with the same parameters.

      To override this check, set the SKIP_UPDATE_CLM_CHECKS environment
      variable or the skip_update_clm_checks ansible variable.

      To recheck the pending CLM update status at a later time, run:

        cd ~/scratch/ansible/next/ardana/ansible
        ansible-playbook -i hosts/verb_hosts ardana-update-status.yml \
          --limit {{ inventory_hostname }} \
          -e update_status_var=clm-update

      To reset the pending CLM update status, run:

        cd ~/scratch/ansible/next/ardana/ansible
        ansible-playbook -i hosts/verb_hosts ardana-update-status.yml \
          --limit {{ inventory_hostname }} \
          -e update_status_var=clm-update \
          -e update_status_reset=true

- name: ardana-upgrade-tools | check-pending-clm-update |
        Check pending CLM update status
  set_fact:
    pending_clm_update: "{{
      pending_clm_update | default(true) | bool and
      ardana_notify_pending_clm_update is defined and
      ardana_notify_pending_clm_update.changed and
      (not skip_update_clm_checks | default(false) | bool) and
      (not lookup('env', 'SKIP_UPDATE_CLM_CHECKS')|default(false, true))}}"

- name: ardana-upgrade-tools | check-pending-clm-update |
        Reset pending CLM update persistent fact
  command: /bin/true
  changed_when: true
  register: _pending_clm_update_reset
  when: (update_status_reset | default(false) | bool) and
        ardana_notify_pending_clm_update is defined and
        ardana_notify_pending_clm_update.changed

- name: ardana-upgrade-tools | check-pending-clm-update |
        Reset pending CLM update cached fact
  set_fact:
    pending_clm_update: false
  when: _pending_clm_update_reset | changed

- name: ardana-upgrade-tools | check-pending-clm-update |
        Set pending CLM update cached/persistent fact
  set_fact:
    pending_clm_update: true
  changed_when: true
  register: ardana_notify_pending_clm_update
  when: (update_status_set | default(false) | bool)

- name: ardana-upgrade-tools | check-pending-clm-update | Set update action
  set_fact:
    update_status_msg: "{{ pending_clm_update|bool|ternary(pending_clm_update_msg,'') }}"
