#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Simple task to handle the special ardana_notify_pending_system_reboot that
# encodes whether a system reboot is required after packages have been updated
# during one of the previous update playbook runs.
#
# Parameters:
#
#  pending_system_reboot: true to enable the pending state, false otherwise
#
# Return:
#
#  The has_pending_system_reboot fact is set to reflect the value of the status
#  variable.
#  The update_status_msg fact is set to an output message describing the
#  pending action associated with the status variable.

---
- name: ardana-upgrade-tools | check-pending-system-reboot |
        Initialize pending system reboot action message
  set_fact:
    pending_system_reboot_msg: |
      WARNING: Package updates installed on the {{ inventory_hostname }}
      host during this run require a system reboot, or there are outstanding
      reboot actions persisted from previous unsuccessful or incomplete update
      or reboot runs.

      The node should be rebooted to complete the update process by running the
      ardana-reboot.yml playbook, e.g.:

        cd ~/scratch/ansible/next/ardana/ansible
        ansible-playbook -i hosts/verb_hosts ardana-reboot.yml \
          --limit {{ inventory_hostname }}

      To override this check, set the SKIP_UPDATE_REBOOT_CHECKS environment
      variable or the skip_update_reboot_checks ansible variable.

      To recheck the pending system reboot status at a later time, run:

        cd ~/scratch/ansible/next/ardana/ansible
        ansible-playbook -i hosts/verb_hosts ardana-update-status.yml \
          --limit {{ inventory_hostname }}

      To turn off the pending system reboot status, run:

        cd ~/scratch/ansible/next/ardana/ansible
        ansible-playbook -i hosts/verb_hosts ardana-update-status.yml \
          --limit {{ inventory_hostname }} \
          -e pending_system_reboot=off

- name: ardana-upgrade-tools | check-pending-system-reboot |
        Check pending system reboot status
  set_fact:
    has_pending_system_reboot: "{{
      has_pending_system_reboot | default(true) | bool and
      ardana_notify_pending_system_reboot is defined and
      ardana_notify_pending_system_reboot.changed and
      (not skip_update_reboot_checks | default(false) | bool) and
      (not lookup('env', 'SKIP_UPDATE_REBOOT_CHECKS')|default(false, true))}}"

- name: ardana-upgrade-tools | check-pending-system-reboot |
        Reset pending system reboot persistent fact
  command: /bin/true
  changed_when: true
  register: _pending_system_reboot_reset
  when: not (pending_system_reboot | default(true) | bool) and
        ardana_notify_pending_system_reboot is defined and
        ardana_notify_pending_system_reboot.changed

- name: ardana-upgrade-tools | check-pending-system-reboot |
        Reset pending system reboot cached fact
  set_fact:
    has_pending_system_reboot: false
  when: _pending_system_reboot_reset | changed

- name: ardana-upgrade-tools | check-pending-system-reboot |
        Set pending system reboot cached/persistent fact
  set_fact:
    has_pending_system_reboot: true
  changed_when: true
  register: ardana_notify_pending_system_reboot
  when: (pending_system_reboot | default(false) | bool)

- name: ardana-upgrade-tools | check-pending-system-reboot | Set update action
  set_fact:
    update_status_msg: "{{ has_pending_system_reboot|bool|ternary(pending_system_reboot_msg,'') }}"
