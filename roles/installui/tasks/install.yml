#
# (c) Copyright 2017-2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Playbook for setting up the installui on the deployer
---

- name: installui | install | Update venv cache
  become: yes
  install_package:
    cache: update

- name: installui | install | Install Cloud Installer server (venv)
  become: yes
  install_package:
    name: installer-server
    service: installer-server
    state: present
    activate: act_on
  when: deployer_media_legacy_layout|bool
  notify: installui_change

- name: installui | install | Install Cloud Installer UI (venv)
  become: yes
  install_package:
    name: installer-ui
    service: installer-ui
    state: present
    activate: act_on
  when: deployer_media_legacy_layout|bool
  notify: installui_change

# Don't use 'mode' parameter in unarchive module due to ansible bug!
#   https://github.com/ansible/ansible-modules-core/issues/4813
- name: installui | install | Extract Cloud Installer UI tarball (venv)
  become: yes
  unarchive:
    dest: "{{ ui_comp | venv_dir }}"
    src: "{{ item }}"
    copy: no
    owner: "{{ ardanauser }}"
    group: "{{ ardanauser }}"
  with_fileglob:
    - "{{ ui_comp | jar_dir }}/cloudinstaller-*.tgz"

- name: installui | configure | Create systemd directory
  become: yes
  file:
    path: "{{ systemd_config_dir }}"
    state: directory

- name: installui | configure | Create log directory
  become: yes
  file:
    owner: "{{ ardanauser }}"
    group: "{{ ardanauser }}"
    path: "{{ log_dir }}"
    state: directory

- name: installui | configure | Create log file if non-existent
  become: yes
  copy:
    content: ""
    dest: "{{ log_dir }}/{{ server_comp }}.log"
    force: no
    owner: "{{ ardanauser }}"
    group: "{{ ardanauser }}"

- name: installui | configure | Change permissions of existing log file
  become: yes
  file:
    owner: "{{ ardanauser }}"
    group: "{{ ardanauser }}"
    path: "{{ log_dir }}/{{ server_comp }}.log"
    state: file

- name: installui | configure | Apply systemd template
  become: yes
  template:
    src: "local.conf.j2"
    dest: "{{ systemd_config_file }}"
  notify: installui_change

- name: installui | install | Setup Install UI service (venv)
  become: yes
  setup_systemd:
    name: "{{ server_comp }}"
    service: "{{ server_comp }}"
    user: "{{ ardanauser }}"
    group: "{{ ardanauser }}"
    cmd: python
    args: >
      "{{ server_comp | venv_dir }}/lib/python2.7/site-packages/ardana_installer_server/main.py"
      --config-file {{ server_cfg_dir }}/{{ server_comp }}.conf
  when: deployer_media_legacy_layout|bool

- name: installui | install | Setup Install UI service (rpm)
  become: yes
  setup_systemd:
    name: "{{ server_comp }}"
    service: "{{ server_comp }}"
    user: "{{ ardanauser }}"
    group: "{{ ardanauser }}"
    install_path: /usr/bin
    cmd: ardana-installer-server
    args: >
      --config-file {{ server_cfg_dir }}/{{ server_comp }}.conf
  when: not deployer_media_legacy_layout|bool

- name: installui | configure | Create ardana installer temp directory
  become: yes
  file:
    path: "{{ tmp_dir }}"
    state: directory
    mode: 0700
    owner: "{{ ardanauser }}"
    group: "{{ ardanauser }}"

