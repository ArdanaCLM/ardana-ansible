#
# (c) Copyright 2016 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017-2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

# convert image to raw format when using SES backend for nova
- include: convert_to_raw.yml
  when:
    - ses_config_path is defined
    - ses_nova_set_images_type | default(False)

# get the md5sum for the new image
- name: service-guest-image | upload-image | get checksum for new image
  shell: "md5sum {{ guest_image_tempdir.stdout }}/{{ IMAGE_NAME }}*.qcow2 | cut -d ' ' -f 1"
  register: image_checksum
  run_once: true

# verify if the md5sum match and if the image is in ACTIVE status
- name: service-guest-image | upload-image | find image that matches the checksum and name
  shell: >
    openstack image list --property checksum={{ image_checksum.stdout }}
    --status active --name {{ IMAGE_NAME }} -f value -c ID
  environment: &OS_ENV
    OS_AUTH_URL: "{{ openstack_auth_url }}"
    OS_IDENTITY_API_VERSION: 3
    OS_ENDPOINT_TYPE: "{{ openstack_endpoint_type }}"
    OS_INTERFACE: "{{ openstack_endpoint_type }}"
    OS_USER_DOMAIN_NAME: "{{ openstack_user_domain_name }}"
    OS_USERNAME: "{{ openstack_username }}"
    OS_PASSWORD: "{{ openstack_password }}"
    OS_PROJECT_DOMAIN_NAME: "{{ openstack_project_domain_name }}"
    OS_PROJECT_NAME: "{{ openstack_project_name }}"
    OS_CACERT: "{{ openstack_ca_file }}"
  register: matched_image_ids
  run_once: true

# upload new image in glance, if current image is not found in glance
- name: service-guest-image | upload-image | Upload new datastore image
  shell: >
    openstack image create
    --file {{ guest_image_tempdir.stdout }}/{{ IMAGE_NAME }}*.qcow2
    --container-format bare --disk-format qcow2
    --private {{ IMAGE_NAME }} -f value -c id
  register: image_id_from_glance_upload
  environment: *OS_ENV
  when: matched_image_ids.stdout == ""
  run_once: true

# if the image upload was done then export the new image id to be used in service configuration,
# otherwise use the existing image id
- name: service-guest-image | upload-image | use image id from glance upload
  set_fact:
    service_guest_image_id: "{% if not (image_id_from_glance_upload | skipped) %}{{ image_id_from_glance_upload.stdout }}{% else %}{{ matched_image_ids.stdout_lines[0] }}{% endif %}"
  run_once: true
